import{ax as p,al as i,z as c,A as h,B as s,R as o,aL as k,O as a,b6 as m,J as u}from"./chunks/framework.CiWjUW6V.js";const B=JSON.parse('{"title":"管理器特性开发","description":"了解如何开发适配 ShiroSU 管理器的模块","frontmatter":{"layout":"doc","icon":"settings","title":"管理器特性开发","description":"了解如何开发适配 ShiroSU 管理器的模块","outline":"deep","footer":true,"breadcrumbs":[{"title":"OOM-WG","link":"/ssu"},{"title":"dev","link":""},{"title":"module","link":"/ssu/dev/module"},{"title":"管理器特性开发","link":"/ssu/dev/module/manager"}]},"headers":[],"relativePath":"ssu/dev/module/manager.md","filePath":"ssu/dev/module/manager.md","lastUpdated":1761491518000}'),A={name:"ssu/dev/module/manager.md"},g={class:"footnotes"},C={class:"footnotes-list"},b={id:"fn1",class:"footnote-item"};function S(y,e,f,_,D,v){const t=i("ArticleMetadata"),l=i("NolebasePageProperties"),n=i("NolebaseGitContributors"),d=i("NolebaseGitChangelog"),r=i("VPNolebaseInlineLinkPreview");return h(),c("div",null,[e[4]||(e[4]=s("h1",{id:"管理器特性开发",tabindex:"-1"},[s("strong",null,"管理器特性开发"),a(),s("a",{class:"header-anchor",href:"#管理器特性开发","aria-label":"Permalink to “管理器特性开发”"},"​")],-1)),o(t),o(l),e[5]||(e[5]=k(`<div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>本篇内容的所有特性都是在 ShiroSU 管理器实现的，与 ShiroSU root 实现没有关联性， ShiroSU 管理器的特性可在其他 root 实现上使用</p></div><p>ShiroSU 管理器的特性大多都是在 <code>module.prop</code> 与其他特定文件上的拓展</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>请确保模块内的所有文本文件均使用 <code>UNIX (LF)</code> 换行类型，而不是 <code>Windows (CR + LF)</code> 或 <code>Macintosh (CR)</code>！</p></div><h2 id="module-prop" tabindex="-1">module.prop <a class="header-anchor" href="#module-prop" aria-label="Permalink to “module.prop”">​</a></h2><h3 id="ansi-转义码" tabindex="-1">ANSI 转义码 <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> <a class="header-anchor" href="#ansi-转义码" aria-label="Permalink to “ANSI 转义码”">​</a></h3><p>ShiroSU 允许在 <code>module.prop</code> 或 Shell 脚本中使用 <code>ANSI 转义码</code> 来丰富文本的显示，例如可在 <code>module.prop</code> 使用如下代码:</p><div class="language-properties"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes kanagawa-lotus kanagawa-wave" style="--shiki-light:#545464;--shiki-dark:#DCD7BA;--shiki-light-bg:#F2ECBC;--shiki-dark-bg:#1F1F28;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">id</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">ssu_cmd_ext</span></span>
<span class="line"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">name</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">Command Set Extension</span></span>
<span class="line"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">version</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">Auto-generated by SSU</span></span>
<span class="line highlighted"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">versionAnsi</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">\\e[1mAuto-generated\\e[0m by SSU</span></span>
<span class="line"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">versionCode</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">1</span></span>
<span class="line"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">author</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">SSU Developers (O.O.M. W.G.)</span></span>
<span class="line"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">description</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">Add coreutils, busybox, and bash to /system/bin.</span></span>
<span class="line highlighted"><span style="--shiki-light:#CC6D00;--shiki-dark:#FFA066;">descriptionAnsi</span><span style="--shiki-light:#4E8CA2;--shiki-dark:#9CABCA;">=</span><span style="--shiki-light:#545464;--shiki-dark:#DCD7BA;">Add \\e[1mcoreutils, busybox, and bash\\e[0m to \\e[1m/system/bin\\e[0m.</span></span></code></pre></div><p>使用如上 <code>module.prop</code> 后， 模块在 ShiroSU 管理器中显示时 <code>Auto-generated</code>、<code>coreutils, busybox, and bash</code> 以及 <code>/system/bin</code> 均会被加粗</p><p>在 <code>module.prop</code> 中， 可使用 <code>nameAnsi</code>、<code>versionAnsi</code>、<code>authorAnsi</code>、<code>descriptionAnsi</code>、<code>actionAnsi</code> 来显示包含 ANSI 转义码的文本</p><p>虽然不包含 <code>Ansi</code> 后缀同样可以使用，但是为了确保兼容性，请这么做</p><p><mark>ShiroSU 是通过顺序解析来读取 <code>module.prop</code> 中的内容的，所以请确保包含 <code>Ansi</code> 后缀的值是靠后的</mark></p><details class="details custom-block"><summary>展开查看渲染效果</summary><p><img src="`+m+'" alt="module.prop 渲染效果" loading="lazy"></p></details><h3 id="损坏检测-规范检查" tabindex="-1">损坏检测&amp;规范检查 <a class="header-anchor" href="#损坏检测-规范检查" aria-label="Permalink to “损坏检测&amp;规范检查”">​</a></h3><p>ShiroSU 管理器有一个机制用来检测 <code>module.prop</code> 是否损坏或符合规范， 如果损坏或不符合规范，ShiroSU 管理器会在该模块的上方显示一个标签</p><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>有些模块会使用 <code>sed</code> 命令来修改 <code>module.prop</code> 以实现实时更新内容，但此方法有一定概率会导致 <code>module.prop</code> 文件损坏， 请避免通过 <code>sed</code> 修改或者通过其他方式来显示实时内容，也可以实现一个 <code>module.prop</code> 损坏检测机制，在其损坏时恢复至默认内容</p></div><p>ShiroSU 管理器具体会检测如下内容:</p><ul><li><code>module.prop</code> 内是否包含不符合语法的内容</li><li><code>id</code>、<code>name</code>、<code>version</code>、<code>author</code>、<code>description</code> 是否为空 (如有带有 <code>Ansi</code> 后缀的同样检测)</li><li><code>id</code> 是否符合此正则表达式: <code>^[a-zA-Z][a-zA-Z0-9._-]+$</code></li><li><code>versionCode</code> 是否大于 <strong>0</strong></li><li><code>module.prop</code> 内是否存在大小写不规范的情况 (ShiroSU 管理器会正常解析，但仍会显示标签)</li></ul><p><mark>如果只是 <code>module.prop</code> 损坏，重装模块通常可解决此问题，如果不符合规范，则需要开发者自行修复以解决此问题</mark></p><h3 id="模块标签" tabindex="-1">模块标签 <a class="header-anchor" href="#模块标签" aria-label="Permalink to “模块标签”">​</a></h3><p>ShiroSU 管理器默认会在模块名称下方显示一个内容为该模块 <code>id</code> 的小标签， 当模块目录内存在文件名称符合以下正则表达式的文件时，同样也会显示对应的小标签:</p><ul><li><code>(?i)^changelogs?(?:[._-][A-Za-z0-9._-]+)?(?:\\.(?:txt|md|mkd))?$</code>: 模块的更新日志，点击则会通过弹窗显示内容</li><li><code>(?i)^(?:license|licence)(?:[._-][A-Za-z0-9._-]+)?(?:\\.(?:txt|md|mkd))?$</code>: 模块的许可证，点击则会通过弹窗显示内容</li></ul><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>搜索文件时不会搜索子目录内的内容</p></div><h3 id="其他内容" tabindex="-1">其他内容 <a class="header-anchor" href="#其他内容" aria-label="Permalink to “其他内容”">​</a></h3><p>除了 <strong>ANSI 转义码</strong> 相关内容之外，ShiroSU 管理器还会解析如下内容:</p><ul><li><code>action</code>: 定义此内容，会在执行操作前显示弹窗，此内容用于描述操作有何作用</li><li><code>runtimeInfo</code>: 定义此内容，会在模块名称旁边显示可点击图标，此内容为文本文件的 <strong>模块相对路径/绝对路径</strong>，用于描述模块运行时的信息</li></ul><h2 id="其他特性" tabindex="-1">其他特性 <a class="header-anchor" href="#其他特性" aria-label="Permalink to “其他特性”">​</a></h2><p>ShiroSU 会在后续更新中提供<strong>模块备份接口</strong>、<strong>模块更新接口 (在更新时执行原本模块的代码)</strong>、<strong>模块存储接口</strong> 等功能，这些内容尚在规划中，会在后续更新中推出</p>',27)),o(n),o(d),e[6]||(e[6]=s("hr",{class:"footnotes-sep"},null,-1)),s("section",g,[s("ol",C,[s("li",b,[s("p",null,[e[1]||(e[1]=a("ANSI 转义码是一种用于控制文本显示样式的字符编码方式，常用于终端和控制台应用程序中，详见",-1)),o(r,{href:"https://zh.wikipedia.org/wiki/ANSI%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97",target:"_blank",rel:"noreferrer"},{default:u(()=>[...e[0]||(e[0]=[a("维基百科",-1)])]),_:1}),e[2]||(e[2]=a()),e[3]||(e[3]=s("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1))])])])])])}const F=p(A,[["render",S]]);export{B as __pageData,F as default};
