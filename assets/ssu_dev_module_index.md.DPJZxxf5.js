import{ax as p,al as i,z as S,A as m,B as t,R as e,aL as f,O as l,J as n}from"./chunks/framework.CiWjUW6V.js";const _=JSON.parse('{"title":"模块开发","description":"学习如何为 ShiroSU 开发和构建自定义模块","frontmatter":{"layout":"doc","icon":"code","title":"模块开发","description":"学习如何为 ShiroSU 开发和构建自定义模块","outline":"deep","footer":true,"breadcrumbs":[{"title":"OOM-WG","link":"/ssu"},{"title":"dev","link":""},{"title":"module","link":"/ssu/dev/module"}]},"headers":[],"relativePath":"ssu/dev/module/index.md","filePath":"ssu/dev/module/index.md","lastUpdated":1761491518000}'),g={name:"ssu/dev/module/index.md"},b={class:"tip custom-block github-alert"};function N(U,o,k,P,v,x){const s=i("ArticleMetadata"),u=i("NolebasePageProperties"),r=i("VPNolebaseInlineLinkPreview"),a=i("NolebaseGitContributors"),d=i("NolebaseGitChangelog");return m(),S("div",null,[o[13]||(o[13]=t("h1",{id:"模块开发",tabindex:"-1"},[t("strong",null,"模块开发"),l(),t("a",{class:"header-anchor",href:"#模块开发","aria-label":"Permalink to “模块开发”"},"​")],-1)),e(s),e(u),o[14]||(o[14]=f('<p>ShiroSU 作为有多条开发方向的项目，为 ShiroSU 开发适配 ShiroSU 特性的模块有大致两条方向:</p><ul><li><strong>管理器</strong>特性: 是 ShiroSU 管理器的特性，在其他 root 实现上也可使用</li><li><strong>原生 root</strong> 特性: 是 ShiroSU root 实现的特性，与其他 root 实现略有不同</li></ul><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>如果将 ShiroSU 仅用于其他 root 实现的 root 管理器，那么模块标准应当以当前 root 实现为准，ShiroSU <strong>不会干涉</strong>其他 root 实现的任何行为</p><p>但不依赖 root 实现的标准可以<strong>额外再遵守</strong> ShiroSU 管理器 的标准，实现对 ShiroSU 管理器的专门适配</p></div><p>因此具体的开发内容由此分成两大块:</p>',4)),t("ul",null,[t("li",null,[o[3]||(o[3]=l("管理器相关: ",-1)),t("ul",null,[t("li",null,[e(r,{href:"./manager"},{default:n(()=>[...o[0]||(o[0]=[l("管理器特性开发",-1)])]),_:1})]),t("li",null,[e(r,{href:"./cfgui"},{default:n(()=>[...o[1]||(o[1]=[l("ConfigUI",-1)])]),_:1})]),t("li",null,[e(r,{href:"./webui"},{default:n(()=>[...o[2]||(o[2]=[l("WebUI",-1)])]),_:1})])])]),t("li",null,[o[6]||(o[6]=l("原生 root: ",-1)),t("ul",null,[t("li",null,[e(r,{href:"./root"},{default:n(()=>[...o[4]||(o[4]=[l("原生特性开发",-1)])]),_:1})]),t("li",null,[e(r,{href:"./kernel"},{default:n(()=>[...o[5]||(o[5]=[l("内核接口开发",-1)])]),_:1})])])])]),o[15]||(o[15]=t("p",null,"除此之外，还要以下额外内容:",-1)),t("ul",null,[t("li",null,[e(r,{href:"./builder"},{default:n(()=>[...o[7]||(o[7]=[l("模块构建工具",-1)])]),_:1})])]),t("div",b,[o[11]||(o[11]=t("p",{class:"custom-block-title"},"TIP",-1)),o[12]||(o[12]=t("p",null,"使用 ShiroSU 模块构建工具可以快速生成适配多种 root 实现并且适配 ShiroSU 本身的模块",-1)),t("p",null,[o[9]||(o[9]=l("同时也可以使用来自 ",-1)),e(r,{href:"https://app.niggergo.work",target:"_blank",rel:"noreferrer"},{default:n(()=>[...o[8]||(o[8]=[l("NGA SDK",-1)])]),_:1}),o[10]||(o[10]=l(" 的辅助函数以及 Shell 加密， 提升开发便利性以及安全性",-1))])]),e(a),e(d)])}const C=p(g,[["render",N]]);export{_ as __pageData,C as default};
