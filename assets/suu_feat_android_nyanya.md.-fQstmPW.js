import{ax as b,al as i,z as u,A as h,R as o,aL as n,B as l,O as e,J as r}from"./chunks/framework.CiWjUW6V.js";const g=JSON.parse('{"title":"Nyanya整理","titleTemplate":"苏柚 Android","description":"","frontmatter":{"title":"Nyanya整理","titleTemplate":"苏柚 Android","icon":"cat","breadcrumbs":[{"title":"OOM-WG","link":"/suu"},{"title":"feat","link":""},{"title":"android","link":""},{"title":"Nyanya整理","link":"/suu/feat/android/nyanya"}]},"headers":[],"relativePath":"suu/feat/android/nyanya.md","filePath":"suu/feat/android/nyanya.md","lastUpdated":1761491518000}'),k={name:"suu/feat/android/nyanya.md"};function f(m,a,P,c,q,x){const d=i("NolebasePageProperties"),t=i("VPNolebaseInlineLinkPreview"),s=i("NolebaseGitContributors"),p=i("NolebaseGitChangelog");return h(),u("div",null,[o(d),a[18]||(a[18]=n('<div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>直接修改配置文件属于高阶玩法，请自行探索哦~</p></div><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to “原理”">​</a></h2><blockquote><p>通过存储权限或 root 权限监听指定目录，将文件移动并归类到指定文件夹</p></blockquote><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to “使用”">​</a></h2><blockquote><p>通过功能页面的运行按钮手动运行，或通过附加模块实现开机自启动服务进程</p></blockquote><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to “配置”">​</a></h2><blockquote><p>配置页面内有覆盖配置按钮，可用于恢复默认配置或导入指定配置</p></blockquote><blockquote><p>配置页面内有导出配置按钮，可用于导出当前配置</p></blockquote><h3 id="信息配置" tabindex="-1">信息配置 <a class="header-anchor" href="#信息配置" aria-label="Permalink to “信息配置”">​</a></h3><p>信息配置包括以下内容:</p><ul><li>名称</li><li>作者</li><li>版本</li></ul><blockquote><p>信息配置对功能<strong>无任何作用</strong>，仅用于标记配置信息</p></blockquote><h3 id="基本配置" tabindex="-1">基本配置 <a class="header-anchor" href="#基本配置" aria-label="Permalink to “基本配置”">​</a></h3><p>基本配置包括以下内容:</p><ul><li>调试模式</li><li>多用户支持</li></ul><h4 id="调试模式" tabindex="-1">调试模式 <a class="header-anchor" href="#调试模式" aria-label="Permalink to “调试模式”">​</a></h4><blockquote><p>用于输出更多日志以排查问题</p></blockquote><h4 id="多用户支持" tabindex="-1">多用户支持 <a class="header-anchor" href="#多用户支持" aria-label="Permalink to “多用户支持”">​</a></h4><blockquote><p>用于处理多个用户上的数据，仅能在<strong>欢愉模式</strong>使用</p></blockquote><h3 id="功能配置" tabindex="-1">功能配置 <a class="header-anchor" href="#功能配置" aria-label="Permalink to “功能配置”">​</a></h3><p>功能配置包括以下内容:</p><ul><li>归类路径</li><li>移动延迟</li><li>固定循环</li><li>固定循环间隔</li><li>依监听组分类</li><li>依时间分类</li><li>默认分类类型</li><li>忽略无后缀文件</li><li>监听列表</li><li>递归列表</li><li>后缀列表</li><li>后缀忽略列表</li><li>名称列表</li><li>名称忽略列表</li></ul><h4 id="归类路径" tabindex="-1">归类路径 <a class="header-anchor" href="#归类路径" aria-label="Permalink to “归类路径”">​</a></h4><blockquote><p>归类后文件的存放路径</p></blockquote><h4 id="移动延迟" tabindex="-1">移动延迟 <a class="header-anchor" href="#移动延迟" aria-label="Permalink to “移动延迟”">​</a></h4><blockquote><p>归类文件前的等待时间</p><p>单位: 秒</p></blockquote><h4 id="固定循环" tabindex="-1">固定循环 <a class="header-anchor" href="#固定循环" aria-label="Permalink to “固定循环”">​</a></h4><blockquote><p>是否在监听路径的同时固定循环移动文件</p></blockquote><h4 id="固定循环间隔" tabindex="-1">固定循环间隔 <a class="header-anchor" href="#固定循环间隔" aria-label="Permalink to “固定循环间隔”">​</a></h4>',29)),l("blockquote",null,[a[2]||(a[2]=l("p",null,"固定循环的间隔",-1)),l("p",null,[a[1]||(a[1]=e("格式遵守",-1)),o(t,{href:"https://pkg.go.dev/time#ParseDuration",target:"_blank",rel:"noreferrer"},{default:r(()=>[...a[0]||(a[0]=[e("time.ParseDuration",-1)])]),_:1})])]),a[19]||(a[19]=n('<h4 id="依监听组分类" tabindex="-1">依监听组分类 <a class="header-anchor" href="#依监听组分类" aria-label="Permalink to “依监听组分类”">​</a></h4><blockquote><p>是否把文件归类到名称为监听组名称的子目录内</p></blockquote><h4 id="依时间分类" tabindex="-1">依时间分类 <a class="header-anchor" href="#依时间分类" aria-label="Permalink to “依时间分类”">​</a></h4><blockquote><p>是否把文件归类到名称为文件修改日期的子目录内</p><p>格式为<code>年-月-日</code></p></blockquote><h4 id="默认分类类型" tabindex="-1">默认分类类型 <a class="header-anchor" href="#默认分类类型" aria-label="Permalink to “默认分类类型”">​</a></h4><blockquote><p>不在后缀列表与名称列表规则内的文件的归类子目录</p></blockquote><h4 id="监听列表" tabindex="-1">监听列表 <a class="header-anchor" href="#监听列表" aria-label="Permalink to “监听列表”">​</a></h4>',7)),l("blockquote",null,[a[7]||(a[7]=l("p",null,"要监听的路径",-1)),a[8]||(a[8]=l("p",null,[e("需要递归的路径将以组名称形式存储到"),l("code",null,"递归列表")],-1)),a[9]||(a[9]=l("p",null,[e("组名称可用于"),l("code",null,"依监听组分类")],-1)),l("p",null,[a[4]||(a[4]=e("变量请参见",-1)),o(t,{href:"./../../Appendix/Android/Path"},{default:r(()=>[...a[3]||(a[3]=[e("路径对照",-1)])]),_:1})]),l("p",null,[a[6]||(a[6]=e("格式遵守",-1)),o(t,{href:"https://pkg.go.dev/path/filepath#Match",target:"_blank",rel:"noreferrer"},{default:r(()=>[...a[5]||(a[5]=[e("filepath.Match",-1)])]),_:1})])]),a[20]||(a[20]=n('<h4 id="递归列表" tabindex="-1">递归列表 <a class="header-anchor" href="#递归列表" aria-label="Permalink to “递归列表”">​</a></h4><blockquote><p>用于存储需要递归监听的<code>监听列表</code>组名称</p></blockquote><h4 id="后缀列表" tabindex="-1">后缀列表 <a class="header-anchor" href="#后缀列表" aria-label="Permalink to “后缀列表”">​</a></h4><blockquote><p>分类文件的后缀规则</p><p>优先级比<code>名称列表</code>低</p><p>组名称会用于归类文件的子目录</p><p>变量<code>[name]</code>会被替换为归类文件所属监听组的组名称</p></blockquote><h4 id="后缀忽略列表" tabindex="-1">后缀忽略列表 <a class="header-anchor" href="#后缀忽略列表" aria-label="Permalink to “后缀忽略列表”">​</a></h4><blockquote><p>要忽略的文件后缀</p></blockquote><h4 id="名称列表" tabindex="-1">名称列表 <a class="header-anchor" href="#名称列表" aria-label="Permalink to “名称列表”">​</a></h4>',7)),l("blockquote",null,[a[14]||(a[14]=l("p",null,"分类文件的名称规则",-1)),a[15]||(a[15]=l("p",null,[e("优先级比"),l("code",null,"后缀列表"),e("高")],-1)),a[16]||(a[16]=l("p",null,"组名称会用于归类文件的子目录",-1)),l("p",null,[a[11]||(a[11]=e("格式遵守",-1)),o(t,{href:"https://pkg.go.dev/path#Match",target:"_blank",rel:"noreferrer"},{default:r(()=>[...a[10]||(a[10]=[e("path.Match",-1)])]),_:1}),a[12]||(a[12]=e("或",-1)),a[13]||(a[13]=l("strong",null,"仅子字符串判断",-1))]),a[17]||(a[17]=l("p",null,[e("变量"),l("code",null,"[name]"),e("会被替换为归类文件所属监听组的组名称")],-1))]),a[21]||(a[21]=l("h4",{id:"名称忽略列表",tabindex:"-1"},[e("名称忽略列表 "),l("a",{class:"header-anchor",href:"#名称忽略列表","aria-label":"Permalink to “名称忽略列表”"},"​")],-1)),a[22]||(a[22]=l("blockquote",null,[l("p",null,"要忽略的文件名称")],-1)),o(s),o(p)])}const N=b(k,[["render",f]]);export{g as __pageData,N as default};
